eta = 0.2,
gamma = 0,
alpha = 1,
colsample_bytree = 1,
min_child_weight = 1,
subsample = 1,
objective = "binary:logistic",
eval_metric = "error"
)
xgb_pred <- predict(credit_xgboost, testMat)
xgb_pred <- ifelse(xgb_pred > 0.5, 1, 0)
confusionMatrix(xgb_pred, testLabel)
set.seed(1234)
credit_xgboost <- xgboost(data = trainMat,
label = trainLabel,
nrounds = 50,
max.depth = 7,
eta = 0.2,
gamma = 0,
alpha = 2,
colsample_bytree = 1,
min_child_weight = 1,
subsample = 1,
objective = "binary:logistic",
eval_metric = "error"
)
xgb_pred <- predict(credit_xgboost, testMat)
xgb_pred <- ifelse(xgb_pred > 0.5, 1, 0)
confusionMatrix(xgb_pred, testLabel)
set.seed(1234)
credit_xgboost <- xgboost(data = trainMat,
label = trainLabel,
nrounds = 50,
max.depth = 7,
eta = 0.2,
gamma = 0,
alpha = 1.1,
colsample_bytree = 1,
min_child_weight = 1,
subsample = 1,
objective = "binary:logistic",
eval_metric = "error"
)
xgb_pred <- predict(credit_xgboost, testMat)
xgb_pred <- ifelse(xgb_pred > 0.5, 1, 0)
confusionMatrix(xgb_pred, testLabel)
set.seed(1234)
credit_xgboost <- xgboost(data = trainMat,
label = trainLabel,
nrounds = 50,
max.depth = 7,
eta = 0.2,
gamma = 0,
alpha = 1,
colsample_bytree = 1,
min_child_weight = 1,
subsample = 1,
objective = "binary:logistic",
eval_metric = "error"
)
xgb_pred <- predict(credit_xgboost, testMat)
xgb_pred <- ifelse(xgb_pred > 0.5, 1, 0)
confusionMatrix(xgb_pred, testLabel)
set.seed(1234)
credit_xgboost <- xgboost(data = trainMat,
label = trainLabel,
nrounds = 50,
max.depth = 7,
eta = 0.2,
gamma = 0,
lambda = 0.5,
alpha = 1,
colsample_bytree = 1,
min_child_weight = 1,
subsample = 1,
objective = "binary:logistic",
eval_metric = "error"
)
xgb_pred <- predict(credit_xgboost, testMat)
xgb_pred <- ifelse(xgb_pred > 0.5, 1, 0)
confusionMatrix(xgb_pred, testLabel)
set.seed(1234)
credit_xgboost <- xgboost(data = trainMat,
label = trainLabel,
nrounds = 50,
max.depth = 7,
eta = 0.2,
gamma = 0,
lambda = 1.5,
alpha = 1,
colsample_bytree = 1,
min_child_weight = 1,
subsample = 1,
objective = "binary:logistic",
eval_metric = "error"
)
xgb_pred <- predict(credit_xgboost, testMat)
xgb_pred <- ifelse(xgb_pred > 0.5, 1, 0)
confusionMatrix(xgb_pred, testLabel)
set.seed(1234)
credit_xgboost <- xgboost(data = trainMat,
label = trainLabel,
nrounds = 50,
max.depth = 7,
eta = 0.2,
gamma = 0,
lambda = 1.1,
alpha = 1,
colsample_bytree = 1,
min_child_weight = 1,
subsample = 1,
objective = "binary:logistic",
eval_metric = "error"
)
xgb_pred <- predict(credit_xgboost, testMat)
xgb_pred <- ifelse(xgb_pred > 0.5, 1, 0)
confusionMatrix(xgb_pred, testLabel)
set.seed(1234)
credit_xgboost <- xgboost(data = trainMat,
label = trainLabel,
nrounds = 50,
max.depth = 7,
eta = 0.2,
gamma = 0,
alpha = 1,
colsample_bytree = 1,
min_child_weight = 1,
subsample = 1,
objective = "binary:logistic",
eval_metric = "error"
)
xgb_pred <- predict(credit_xgboost, testMat)
xgb_pred <- ifelse(xgb_pred > 0.5, 1, 0)
confusionMatrix(xgb_pred, testLabel)
list.files()
library(caret)
library(plyr)
library(xgboost)
library(doMC)
foo <- function(...) {
set.seed(2)
mod <- train(Class ~ ., data = dat,
method = "xgbTree", tuneLength = 50,
..., trControl = trainControl(search = "random"))
invisible(mod)
}
set.seed(1)
dat <- twoClassSim(1000)
just_seq <- system.time(foo())
## I don't have OpenMP installed
xgb_par <- system.time(foo(nthread = 4))
just_seq
xgb_par <- system.time(foo(nthread = 2))
registerDoMC(cores = 2)
mc_par <- system.time(foo())
xgb_par[3]
just_seq[3]
mc_par[3]
just_seq[3]/mc_par[3]
just_seq[3]/xgb_par[3]
xgb_par[3]/mc_par[3]
registerDoMC(cores = 4)
mc_par <- system.time(foo())
xgb_par[3]
just_seq[3]
mc_par[3]
just_seq[3]/mc_par[3]
just_seq[3]/xgb_par[3]
xgb_par[3]/mc_par[3]
head(dat)
dim(Dat)
dim(dat)
?invisible
mod
just_seq
xgb_par
mc_par
?system.time
library(caret)
library(plyr)
library(xgboost)
library(doMC)
foo <- function(...) {
set.seed(2)
mod <- train(Class ~ ., data = dat,
method = "xgbTree", tuneLength = 50,
..., trControl = trainControl(search = "random"))
invisible(mod)
}
set.seed(1)
dat <- twoClassSim(500)
just_seq <- system.time(foo())
## I don't have OpenMP installed
xgb_par <- system.time(foo(nthread = 4))
registerDoMC(cores = 4)
mc_par <- system.time(foo())
xgb_par[3]
just_seq[3]
mc_par[3]
just_seq[3]/mc_par[3]
just_seq[3]/xgb_par[3]
xgb_par[3]/mc_par[3]
?ㅅㄱ먀ㅜ
?train
dat
dim(dat)
head(dat)
?twoClassSim
xgb_par
just_se
just_seq
markdown
markdown("2016-12-18-xgboost-parallelization.rmd")
markdown("2016-12-18-xgboost-parallelization.rmd", "~/otzslayer.github.io/")
markdown("2016-12-18-xgboost-parallelization.rmd", "R")
markdown("2016-12-18-xgboost-parallelization.rmd", "R")
markdown("2016-12-18-xgboost-parallelization.rmd", "R")
library(knitr)
library(rmdformats)
library(ggplot2)
library(dplyr)
library(ggthemr)
library(printr)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, prompt = FALSE,
tidy = FALSE, comment = NA, warning = FALSE,
fig.height = 5, fig.width = 8, fig.retina = 2,
fig.align = "center")
custom_theme <- theme_bw(base_family = "Open Sans") +
theme(axis.title.x = element_text(size = 11,
margin = margin(10, 0, 0, 0),
face = "bold"),
axis.title.y = element_text(size = 11,
margin = margin(0, 10, 0, 0),
face = "bold"),
plot.title = element_text(family = "Open Sans"),
panel.background = element_blank(),
axis.text.x = element_text(angle = 90, face = "italic"),
axis.text.y = element_text(face = "italic"), legend.position = "bottom",
legend.title = element_text(size = 9, face = 'bold.italic'))
theme_set(custom_theme)
xgb_par[3]
just_seq[3]
mc_par[3]
xgb_par
class(xgb_par)
xgb_par[3]
just_seq[3]
mc_par[3]
just_seq[3]/mc_par[3]
just_seq[3]/xgb_par[3]
xgb_par[3]/mc_par[3]
markdown("2016-12-18-xgboost-parallelization.rmd", "R")
markdown("2016-12-18-xgboost-parallelization.rmd", "R")
vanilla <- c(0, 0, 193.52)
xgb_option <- c(0, 0, 195.232)
domc <- c(0, 0, 81.307)
vanilla[3]
xgb_option[3]
domc[3]
vanilla[3]/domc[3]
vanilla[3]/xgb_option[3]
xgb_option[3]/domc[3]
data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])
)
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, color = Option)) +
geom_col()
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col()
library(knitr)
library(rmdformats)
library(ggplot2)
library(dplyr)
library(ggthemr)
library(printr)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, prompt = FALSE,
tidy = FALSE, comment = NA, warning = FALSE,
fig.height = 5, fig.width = 8, fig.retina = 2,
fig.align = "center")
custom_theme <- theme_bw(base_family = "Open Sans") +
theme(axis.title.x = element_text(size = 11,
margin = margin(10, 0, 0, 0),
face = "bold"),
axis.title.y = element_text(size = 11,
margin = margin(0, 10, 0, 0),
face = "bold"),
plot.title = element_text(family = "Open Sans"),
panel.background = element_blank(),
axis.text.x = element_text(angle = 45, face = "italic"),
axis.text.y = element_text(face = "italic"), legend.position = "bottom",
legend.title = element_text(size = 9, face = 'bold.italic'))
theme_set(custom_theme)
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col()
library(knitr)
library(rmdformats)
library(ggplot2)
library(dplyr)
library(ggthemr)
library(printr)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, prompt = FALSE,
tidy = FALSE, comment = NA, warning = FALSE,
fig.height = 5, fig.width = 8, fig.retina = 2,
fig.align = "center")
custom_theme <- theme_bw(base_family = "Open Sans") +
theme(axis.title.x = element_text(size = 11,
margin = margin(10, 0, 0, 0),
face = "bold"),
axis.title.y = element_text(size = 11,
margin = margin(0, 10, 0, 0),
face = "bold"),
plot.title = element_text(family = "Open Sans"),
panel.background = element_blank(),
axis.text.x = element_text(angle = 45, face = "italic", vjust = -1),
axis.text.y = element_text(face = "italic"), legend.position = "bottom",
legend.title = element_text(size = 9, face = 'bold.italic'))
theme_set(custom_theme)
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col()
library(knitr)
library(rmdformats)
library(ggplot2)
library(dplyr)
library(ggthemr)
library(printr)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, prompt = FALSE,
tidy = FALSE, comment = NA, warning = FALSE,
fig.height = 5, fig.width = 8, fig.retina = 2,
fig.align = "center")
custom_theme <- theme_bw(base_family = "Open Sans") +
theme(axis.title.x = element_text(size = 11,
margin = margin(10, 0, 0, 0),
face = "bold"),
axis.title.y = element_text(size = 11,
margin = margin(0, 10, 0, 0),
face = "bold"),
plot.title = element_text(family = "Open Sans"),
panel.background = element_blank(),
axis.text.x = element_text(face = "italic"1),
library(knitr)
library(rmdformats)
library(ggplot2)
library(dplyr)
library(ggthemr)
library(printr)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, prompt = FALSE,
tidy = FALSE, comment = NA, warning = FALSE,
fig.height = 5, fig.width = 8, fig.retina = 2,
fig.align = "center")
custom_theme <- theme_bw(base_family = "Open Sans") +
theme(axis.title.x = element_text(size = 11,
margin = margin(10, 0, 0, 0),
face = "bold"),
axis.title.y = element_text(size = 11,
margin = margin(0, 10, 0, 0),
face = "bold"),
plot.title = element_text(family = "Open Sans"),
panel.background = element_blank(),
axis.text.x = element_text(face = "italic"),
axis.text.y = element_text(face = "italic"), legend.position = "bottom",
legend.title = element_text(size = 9, face = 'bold.italic'))
theme_set(custom_theme)
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col()
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col() + xlab("NULL")
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col() + xlab("NULL") + ggtitle("Comparison")
library(knitr)
library(rmdformats)
library(ggplot2)
library(dplyr)
library(ggthemr)
library(printr)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, prompt = FALSE,
tidy = FALSE, comment = NA, warning = FALSE,
fig.height = 5, fig.width = 8, fig.retina = 2,
fig.align = "center")
custom_theme <- theme_bw(base_family = "Open Sans") +
theme(axis.title.x = element_text(size = 11,
margin = margin(10, 0, 0, 0),
face = "bold"),
axis.title.y = element_text(size = 11,
margin = margin(0, 10, 0, 0),
face = "bold"),
plot.title = element_text(family = "Open Sans", face = "bold", size = 16),
panel.background = element_blank(),
axis.text.x = element_text(face = "italic"),
axis.text.y = element_text(face = "italic"), legend.position = "bottom",
legend.title = element_text(size = 9, face = 'bold.italic'))
theme_set(custom_theme)
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col() + xlab("NULL") + ggtitle("Comparison")
library(knitr)
library(rmdformats)
library(ggplot2)
library(dplyr)
library(ggthemr)
library(printr)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, prompt = FALSE,
tidy = FALSE, comment = NA, warning = FALSE,
fig.height = 5, fig.width = 8, fig.retina = 2,
fig.align = "center")
custom_theme <- theme_bw(base_family = "Open Sans") +
theme(axis.title.x = element_text(size = 11,
margin = margin(10, 0, 0, 0),
face = "bold"),
axis.title.y = element_text(size = 11,
margin = margin(0, 10, 0, 0),
face = "bold"),
plot.title = element_text(family = "Open Sans", face = "bold", size = 20),
panel.background = element_blank(),
axis.text.x = element_text(face = "italic"),
axis.text.y = element_text(face = "italic"), legend.position = "bottom",
legend.title = element_text(size = 9, face = 'bold.italic'))
theme_set(custom_theme)
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col() + xlab("NULL") + ggtitle("Comparison\n")
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col() + xlab("NULL") + ggtitle("\nComparison\n")
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col() + xlab(NULL) + ggtitle("\nComparison\n")
library(knitr)
library(rmdformats)
library(ggplot2)
library(dplyr)
library(ggthemr)
library(printr)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, prompt = FALSE,
tidy = FALSE, comment = NA, warning = FALSE,
fig.height = 5, fig.width = 8, fig.retina = 2,
fig.align = "center")
custom_theme <- theme_bw(base_family = "Open Sans") +
theme(axis.title.x = element_text(size = 11,
margin = margin(10, 0, 0, 0),
face = "bold"),
axis.title.y = element_text(size = 11,
margin = margin(0, 10, 0, 0),
face = "bold"),
plot.title = element_text(family = "Open Sans", face = "bold", size = 20),
panel.background = element_blank(),
axis.text.x = element_text(face = "italic", vjust = -.1),
axis.text.y = element_text(face = "italic"), legend.position = "bottom",
legend.title = element_text(size = 9, face = 'bold.italic'))
theme_set(custom_theme)
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col() + xlab(NULL) + ggtitle("\nComparison\n")
library(knitr)
library(rmdformats)
library(ggplot2)
library(dplyr)
library(ggthemr)
library(printr)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, prompt = FALSE,
tidy = FALSE, comment = NA, warning = FALSE,
fig.height = 5, fig.width = 8, fig.retina = 2,
fig.align = "center")
custom_theme <- theme_bw(base_family = "Open Sans") +
theme(axis.title.x = element_text(size = 11,
margin = margin(10, 0, 0, 0),
face = "bold"),
axis.title.y = element_text(size = 11,
margin = margin(0, 10, 0, 0),
face = "bold"),
plot.title = element_text(family = "Open Sans", face = "bold", size = 20),
panel.background = element_blank(),
axis.text.x = element_text(face = "italic", vjust = .1),
axis.text.y = element_text(face = "italic"), legend.position = "bottom",
legend.title = element_text(size = 9, face = 'bold.italic'))
theme_set(custom_theme)
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col() + xlab(NULL) + ggtitle("\nComparison\n")
library(knitr)
library(rmdformats)
library(ggplot2)
library(dplyr)
library(ggthemr)
library(printr)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, prompt = FALSE,
tidy = FALSE, comment = NA, warning = FALSE,
fig.height = 5, fig.width = 8, fig.retina = 2,
fig.align = "center")
custom_theme <- theme_bw(base_family = "Open Sans") +
theme(axis.title.x = element_text(size = 11,
margin = margin(10, 0, 0, 0),
face = "bold"),
axis.title.y = element_text(size = 11,
margin = margin(0, 10, 0, 0),
face = "bold"),
plot.title = element_text(family = "Open Sans", face = "bold", size = 20),
panel.background = element_blank(),
axis.text.x = element_text(angle = 0, face = "italic", vjust = .1),
axis.text.y = element_text(face = "italic"), legend.position = "bottom",
legend.title = element_text(size = 9, face = 'bold.italic'))
theme_set(custom_theme)
ggplot(data.frame(Option = c("No Option", "Internal Option", "External Option"),
Time = c(vanilla[3], xgb_option[3], domc[3])), aes(x = Option, y = Time, fill = Option)) +
geom_col() + xlab(NULL) + ggtitle("\nComparison\n")
markdown("2016-12-18-xgboost-parallelization.rmd", "R")
