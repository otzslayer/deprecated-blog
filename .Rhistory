epl.between <- betweenness(epl.network)
epl.between <- sort(epl.between, decreasing = TRUE)
head(epl.between, 10)
index <- as.numeric(gsub(x = names(head(epl.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
epl.eigen <- eigen_centrality(epl.network, directed = TRUE, scale = FALSE)
epl.eigen <- sort(epl.eigen$vector, decreasing = TRUE)
head(epl.eigen, 10)
index <- as.numeric(gsub(x = names(head(epl.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
epl.degree <- degree(epl.network, mode = "total")
epl.degree <- sort(epl.degree, decreasing = TRUE)
head(epl.degree, 10)
index <- as.numeric(gsub(x = names(head(epl.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
epl.dd <- degree_distribution(epl.network, cumulative = FALSE)
epl.dd <- data.frame(Degree = 0:(length(epl.dd) - 1),
Proportion = epl.dd)
epl.dd
ggplot(epl.dd[-1, ], aes(x = Degree, y = Proportion)) +
geom_point() +
geom_line() +
scale_x_log10() + scale_y_log10() + geom_smooth(method = "lm")
# Betweenness Centrality of Whole network
laliga.between <- betweenness(laliga.network)
laliga.between <- sort(laliga.between, decreasing = TRUE)
head(laliga.between, 10)
index <- as.numeric(gsub(x = names(head(laliga.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
laliga.eigen <- eigen_centrality(laliga.network, directed = TRUE, scale = FALSE)
laliga.eigen <- sort(laliga.eigen$vector, decreasing = TRUE)
head(laliga.eigen, 10)
index <- as.numeric(gsub(x = names(head(laliga.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
laliga.degree <- degree(laliga.network, mode = "total")
laliga.degree <- sort(laliga.degree, decreasing = TRUE)
head(laliga.degree, 10)
index <- as.numeric(gsub(x = names(head(laliga.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
laliga.dd <- degree_distribution(laliga.network)
laliga.dd <- data.frame(Degree = 0:(length(laliga.dd) - 1),
Proportion = laliga.dd)
laliga.dd
ggplot(laliga.dd[-1, ], aes(x = Degree, y = Proportion)) +
geom_point() +
geom_line() +
scale_x_log10() + scale_y_log10() + geom_smooth(method = "lm")
# Betweenness Centrality of Whole network
bundes.between <- betweenness(bundes.network)
bundes.between <- sort(bundes.between, decreasing = TRUE)
head(bundes.between, 10)
index <- as.numeric(gsub(x = names(head(bundes.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
bundes.eigen <- eigen_centrality(bundes.network, directed = TRUE, scale = FALSE)
bundes.eigen <- sort(bundes.eigen$vector, decreasing = TRUE)
head(bundes.eigen, 10)
index <- as.numeric(gsub(x = names(head(bundes.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
bundes.degree <- degree(bundes.network, mode = "total")
bundes.degree <- sort(bundes.degree, decreasing = TRUE)
head(bundes.degree, 10)
index <- as.numeric(gsub(x = names(head(bundes.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
bundes.dd <- degree_distribution(bundes.network)
bundes.dd <- data.frame(Degree = 0:(length(bundes.dd) - 1),
Proportion = bundes.dd)
bundes.dd
ggplot(bundes.dd[-1, ], aes(x = Degree, y = Proportion)) +
geom_point() +
geom_line() +
scale_x_log10() + scale_y_log10() + geom_smooth(method = "lm")
# Betweenness Centrality of Whole network
seriea.between <- betweenness(seriea.network)
seriea.between <- sort(seriea.between, decreasing = TRUE)
head(seriea.between, 10)
index <- as.numeric(gsub(x = names(head(seriea.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
seriea.eigen <- eigen_centrality(seriea.network, directed = TRUE, scale = FALSE)
seriea.eigen <- sort(seriea.eigen$vector, decreasing = TRUE)
head(seriea.eigen, 10)
index <- as.numeric(gsub(x = names(head(seriea.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
seriea.degree <- degree(seriea.network, mode = "total")
seriea.degree <- sort(seriea.degree, decreasing = TRUE)
head(seriea.degree, 10)
index <- as.numeric(gsub(x = names(head(seriea.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
seriea.dd <- degree_distribution(seriea.network)
seriea.dd <- data.frame(Degree = 0:(length(seriea.dd) - 1),
Proportion = seriea.dd)
seriea.dd
ggplot(seriea.dd[-1, ], aes(x = Degree, y = Proportion)) +
geom_point() +
geom_line() +
scale_x_log10() + scale_y_log10() + geom_smooth(method = "lm")
laliga.adjacency
bundes.adjacency
seriea.adjacency
?scale_x_log10()
?geom_smooth
whole.dd <- degree_distribution(network, cumulative = FALSE)
whole.dd <- data.frame(Degree = 0:(length(whole.dd) - 1),
Proportion = whole.dd)
whole.dd
ggplot(whole.dd[-1, ], aes(x = Degree, y = Proportion)) +
geom_point() +
geom_line() +
scale_x_log10() + scale_y_log10() + geom_smooth(method = "lm", se = FALSE)
whole.dd <- degree_distribution(network, cumulative = FALSE)
whole.dd <- data.frame(Degree = 0:(length(whole.dd) - 1),
Proportion = whole.dd)
whole.dd
ggplot(whole.dd[-1, ], aes(x = Degree, y = Proportion)) +
geom_point() +
geom_line() +
scale_x_log10() + scale_y_log10() + geom_smooth(method = "lm", se = FALSE)
whole.dd
# Betweenness Centrality of Whole network
whole.between <- betweenness(network)
whole.between <- sort(whole.between, decreasing = TRUE)
head(whole.between, 10)
index <- as.numeric(gsub(x = names(head(whole.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
whole.between <- betweenness(network, weights = NULL)
whole.between <- sort(whole.between, decreasing = TRUE)
head(whole.between, 10)
index <- as.numeric(gsub(x = names(head(whole.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
whole.between <- betweenness(network, weights = NA)
whole.between <- sort(whole.between, decreasing = TRUE)
head(whole.between, 10)
index <- as.numeric(gsub(x = names(head(whole.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
whole.between <- betweenness(network, weights = NA, normalized = TRUE)
whole.between <- sort(whole.between, decreasing = TRUE)
head(whole.between, 10)
index <- as.numeric(gsub(x = names(head(whole.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
whole.between <- betweenness(network, normalized = TRUE)
whole.between <- sort(whole.between, decreasing = TRUE)
head(whole.between, 10)
index <- as.numeric(gsub(x = names(head(whole.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
whole.between <- betweenness(network, weights = E(network)$weight, normalized = TRUE)
whole.between <- sort(whole.between, decreasing = TRUE)
head(whole.between, 10)
index <- as.numeric(gsub(x = names(head(whole.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
View(cleanEPL)
# Betweenness Centrality of Whole network
whole.between <- betweenness(network, weights = E(network)$weight, normalized = F)
whole.between <- sort(whole.between, decreasing = TRUE)
head(whole.between, 10)
index <- as.numeric(gsub(x = names(head(whole.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
whole.between <- betweenness(network, weights = E(network)$weight, normalized = T)
whole.between <- sort(whole.between, decreasing = TRUE)
head(whole.between, 10)
index <- as.numeric(gsub(x = names(head(whole.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
whole.between <- betweenness(network, weights = E(network)$weight, normalized = T)
whole.between <- sort(whole.between, decreasing = TRUE)
head(round(whole.between, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.eigen <- eigen_centrality(network, directed = TRUE)
whole.eigen <- sort(whole.eigen$vector, decreasing = TRUE)
head(round(whole.eigen, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
?degree
whole.degree <- degree(network, mode = "total", normalized = TRUE)
whole.degree <- sort(whole.degree, decreasing = TRUE)
head(whole.degree, 10)
index <- as.numeric(gsub(x = names(head(whole.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.degree <- degree(network, mode = "in", normalized = TRUE)
whole.degree <- sort(whole.degree, decreasing = TRUE)
head(whole.degree, 10)
index <- as.numeric(gsub(x = names(head(whole.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.degree <- degree(network, mode = "out", normalized = TRUE)
whole.degree <- sort(whole.degree, decreasing = TRUE)
head(whole.degree, 10)
index <- as.numeric(gsub(x = names(head(whole.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
asdf <- network
E(asdf)$weight <- 1
whole.degree <- degree(asdf, mode = "out", normalized = TRUE)
whole.degree <- sort(whole.degree, decreasing = TRUE)
head(whole.degree, 10)
index <- as.numeric(gsub(x = names(head(whole.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
asdf <- network
E(asdf)$weight <- 1
whole.degree <- degree(asdf, mode = "total", normalized = TRUE)
whole.degree <- sort(whole.degree, decreasing = TRUE)
head(whole.degree, 10)
index <- as.numeric(gsub(x = names(head(whole.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
asdf <- network
E(asdf)$weight <- 1
whole.degree <- degree(network, mode = "total", normalized = TRUE)
whole.degree <- sort(whole.degree, decreasing = TRUE)
head(whole.degree, 10)
index <- as.numeric(gsub(x = names(head(whole.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
?closeness
whole.degree <- degree(network, mode = "total", normalized = TRUE)
whole.degree <- sort(whole.degree, decreasing = TRUE)
head(round(whole.degree, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, mode = "total", normalized = TRUE)
whole.close <- closeness(network, mode = "total", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, weight = NA, mode = "total", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, weight = NULL, mode = "total", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, weight = NA, mode = "total", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness.estimate(network, weight = NA, mode = "total", normalized = TRUE)
whole.close <- closeness(network, weight = NA, mode = "total", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
asdf <- network
E(asdf)$weight <- 1
whole.close <- closeness(asdf, mode = "total", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, mode = "total", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, mode = "in", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, mode = "out", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, mode = "all", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, weight = NA, mode = "all", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.eigen <- eigen_centrality(network, weight = NA, directed = TRUE)
whole.eigen <- sort(whole.eigen$vector, decreasing = TRUE)
head(round(whole.eigen, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.eigen <- eigen_centrality(network, directed = TRUE)
whole.eigen <- sort(whole.eigen$vector, decreasing = TRUE)
head(round(whole.eigen, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.eigen <- eigen_centrality(network, directed = FALSE)
whole.eigen <- sort(whole.eigen$vector, decreasing = TRUE)
head(round(whole.eigen, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.eigen <- eigen_centrality(network, weight = NA, directed = FALSE)
whole.eigen <- sort(whole.eigen$vector, decreasing = TRUE)
head(round(whole.eigen, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.eigen <- eigen_centrality(network, directed = TRUE)
whole.eigen <- sort(whole.eigen$vector, decreasing = TRUE)
head(round(whole.eigen, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
network
asdf <- network
V(asdf)$value <- 1
whole.close <- closeness(asdf, weight = NA, mode = "all", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
asdf <- network
V(asdf)$value <- 1
whole.close <- closeness(network, weight = NA, mode = "all", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
asdf <- network
V(asdf)$value <- 1
whole.close <- closeness(asdf, mode = "all", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
asdf
asdf <- network
V(asdf)$size <- 1
whole.close <- closeness(asdf, mode = "all", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, mode = "all", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, weight = 1, mode = "all", normalized = TRUE)
whole.close <- closeness(network, weights = 1, mode = "all", normalized = TRUE)
whole.close <- closeness(network, weights = NA, mode = "all", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, weight = NA, mode = "all", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, weights = NA, mode = "all", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.close <- closeness(network, mode = "all", normalized = TRUE)
whole.close <- sort(whole.close, decreasing = TRUE)
head(round(whole.close, 3), 10)
index <- as.numeric(gsub(x = names(head(whole.close, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
whole.dd <- degree_distribution(network, cumulative = FALSE)
whole.dd <- data.frame(Degree = 0:(length(whole.dd) - 1),
Proportion = whole.dd)
whole.dd
ggplot(whole.dd[-1, ], aes(x = Degree, y = Proportion)) +
geom_point() +
geom_line() +
scale_x_log10() + scale_y_log10() + geom_smooth(method = "lm", se = FALSE)
# Betweenness Centrality of Whole network
epl.between <- betweenness(epl.network)
epl.between <- sort(epl.between, decreasing = TRUE)
head(epl.between, 10)
index <- as.numeric(gsub(x = names(head(epl.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
epl.eigen <- eigen_centrality(epl.network, directed = TRUE, scale = FALSE)
epl.eigen <- sort(epl.eigen$vector, decreasing = TRUE)
head(epl.eigen, 10)
index <- as.numeric(gsub(x = names(head(epl.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
epl.degree <- degree(epl.network, mode = "total")
epl.degree <- sort(epl.degree, decreasing = TRUE)
head(epl.degree, 10)
index <- as.numeric(gsub(x = names(head(epl.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
epl.between <- betweenness(epl.network, normalized = TRUE)
epl.between <- sort(epl.between, decreasing = TRUE)
head(epl.between, 10)
index <- as.numeric(gsub(x = names(head(epl.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
epl.degree <- degree(epl.network, mode = "total", normalized = TRUE)
epl.degree <- sort(epl.degree, decreasing = TRUE)
head(epl.degree, 10)
index <- as.numeric(gsub(x = names(head(epl.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
epl.eigen <- eigen_centrality(epl.network, directed = TRUE)
epl.eigen <- sort(epl.eigen$vector, decreasing = TRUE)
head(epl.eigen, 10)
index <- as.numeric(gsub(x = names(head(epl.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
epl.between <- betweenness(epl.network, normalized = TRUE)
epl.between <- sort(epl.between, decreasing = TRUE)
head(epl.between, 10)
index <- as.numeric(gsub(x = names(head(epl.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
epl.between <- betweenness(epl.network, normalized = TRUE)
epl.between <- sort(epl.between, decreasing = TRUE)
head(round(epl.between, 3), 10)
index <- as.numeric(gsub(x = names(head(epl.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
epl.eigen <- eigen_centrality(epl.network, directed = TRUE)
epl.eigen <- sort(epl.eigen$vector, decreasing = TRUE)
head(round(epl.eigen, 3), 10)
index <- as.numeric(gsub(x = names(head(epl.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
epl.degree <- degree(epl.network, mode = "total", normalized = TRUE)
epl.degree <- sort(epl.degree, decreasing = TRUE)
head(round(epl.degree, 3), 10)
index <- as.numeric(gsub(x = names(head(epl.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
laliga.between <- betweenness(laliga.network, normalized = TRUE)
laliga.between <- sort(laliga.between, decreasing = TRUE)
head(round(laliga.between, 3), 10)
index <- as.numeric(gsub(x = names(head(laliga.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
laliga.eigen <- eigen_centrality(laliga.network, directed = TRUE, scale = TRUE)
laliga.eigen <- sort(laliga.eigen$vector, decreasing = TRUE)
head(round(laliga.eigen, 3), 10)
index <- as.numeric(gsub(x = names(head(laliga.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
laliga.degree <- degree(laliga.network, mode = "total", normalized = TRUE)
laliga.degree <- sort(laliga.degree, decreasing = TRUE)
head(round(laliga.degree, 3), 10)
index <- as.numeric(gsub(x = names(head(laliga.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
laliga.eigen <- eigen_centrality(laliga.network, directed = TRUE, scale = TRUE)
laliga.eigen <- sort(laliga.eigen$vector, decreasing = TRUE)
head(round(laliga.eigen, 3), 10)
index <- as.numeric(gsub(x = names(head(laliga.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
bundes.between <- betweenness(bundes.network, normalized = TRUE)
bundes.between <- sort(bundes.between, decreasing = TRUE)
head(round(bundes.between, 3), 10)
index <- as.numeric(gsub(x = names(head(bundes.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
bundes.degree <- degree(bundes.network, mode = "total", normalized = TRUE)
bundes.degree <- sort(bundes.degree, decreasing = TRUE)
head(round(bundes.degree, 3), 10)
index <- as.numeric(gsub(x = names(head(bundes.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
bundes.eigen <- eigen_centrality(bundes.network, directed = TRUE, scale = TRUE)
bundes.eigen <- sort(bundes.eigen$vector, decreasing = TRUE)
head(round(bundes.eigen, 3), 10)
index <- as.numeric(gsub(x = names(head(bundes.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
bundes.between <- betweenness(bundes.network, normalized = TRUE)
bundes.between <- sort(bundes.between, decreasing = TRUE)
head(round(bundes.between, 3), 10)
index <- as.numeric(gsub(x = names(head(bundes.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
# Betweenness Centrality of Whole network
seriea.between <- betweenness(seriea.network, normalized = TRUE)
seriea.between <- sort(seriea.between, decreasing = TRUE)
head(round(seriea.between, 3), 10)
index <- as.numeric(gsub(x = names(head(seriea.between, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
seriea.eigen <- eigen_centrality(seriea.network, directed = TRUE, scale = TRUE)
seriea.eigen <- sort(seriea.eigen$vector, decreasing = TRUE)
head(round(seriea.eigen, 3), 10)
index <- as.numeric(gsub(x = names(head(seriea.eigen, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
seriea.degree <- degree(seriea.network, mode = "total", normalized = TRUE)
seriea.degree <- sort(seriea.degree, decreasing = TRUE)
head(round(seriea.degree, 3), 10)
index <- as.numeric(gsub(x = names(head(seriea.degree, 10)), pattern = "team", replacement = ""))
team_nodes[index, ]
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
markdown("2016-12-20-adaptive-lasso.rmd", "machine_learning")
