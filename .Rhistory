x = NULL, y = NULL) +
coord_polar() +
theme_minimal() +
theme(legend.position = "bottom")
library(ggplot2)
library(viridis)
library(scales)
ggplot(weather, aes(date2, ymin = min.temperaturec,
ymax = max.temperaturec, color = mean.temperaturec)) +
geom_linerange(size = 1.3, alpha = 0.75) +
scale_color_viridis(NULL, option = "A") +
scale_x_date(labels = date_format("%b"),
breaks = date_breaks("month")) +
ylim(-10, 35) +
labs(title = "San Francisco Weather Radial",
x = NULL, y = NULL) +
coord_polar() +
theme_minimal(base_family = "NanumBarunGothic") +
theme(legend.position = "bottom")
fonts()
library(ggplot2)
library(viridis)
library(scales)
ggplot(weather, aes(date2, ymin = min.temperaturec,
ymax = max.temperaturec, color = mean.temperaturec)) +
geom_linerange(size = 1.3, alpha = 0.75) +
scale_color_viridis(NULL, option = "A") +
scale_x_date(labels = date_format("%b"),
breaks = date_breaks("month")) +
ylim(-10, 35) +
labs(title = "San Francisco Weather Radial",
x = NULL, y = NULL) +
coord_polar() +
theme_minimal(base_family = "Open Sans Condensed") +
theme(legend.position = "bottom")
library(ggplot2)
library(viridis)
library(scales)
ggplot(weather, aes(date2, ymin = min.temperaturec,
ymax = max.temperaturec, color = mean.temperaturec)) +
geom_linerange(size = 1.3, alpha = 0.75) +
scale_color_viridis(NULL, option = "A") +
scale_x_date(labels = date_format("%b"),
breaks = date_breaks("month")) +
ylim(-10, 35) +
labs(title = "San Francisco Weather Radial",
x = NULL, y = NULL) +
coord_polar() +
theme_minimal(base_family = "Garamond") +
theme(legend.position = "bottom")
font_import(pattern = "Impact")
library(ggplot2)
library(viridis)
library(scales)
ggplot(weather, aes(date2, ymin = min.temperaturec,
ymax = max.temperaturec, color = mean.temperaturec)) +
geom_linerange(size = 1.3, alpha = 0.75) +
scale_color_viridis(NULL, option = "A") +
scale_x_date(labels = date_format("%b"),
breaks = date_breaks("month")) +
ylim(-10, 35) +
labs(title = "San Francisco Weather Radial",
x = NULL, y = NULL) +
coord_polar() +
theme_minimal(base_family = "Impact") +
theme(legend.position = "bottom")
fonts()
font_import(pattern = "Lato")
library(ggplot2)
library(viridis)
library(scales)
ggplot(weather, aes(date2, ymin = min.temperaturec,
ymax = max.temperaturec, color = mean.temperaturec)) +
geom_linerange(size = 1.3, alpha = 0.75) +
scale_color_viridis(NULL, option = "A") +
scale_x_date(labels = date_format("%b"),
breaks = date_breaks("month")) +
ylim(-10, 35) +
labs(title = "San Francisco Weather Radial",
x = NULL, y = NULL) +
coord_polar() +
theme_minimal(base_family = "Lato") +
theme(legend.position = "bottom")
fonts()
library(ggplot2)
library(viridis)
library(scales)
ggplot(weather, aes(date2, ymin = min.temperaturec,
ymax = max.temperaturec, color = mean.temperaturec)) +
geom_linerange(size = 1.3, alpha = 0.75) +
scale_color_viridis(NULL, option = "A") +
scale_x_date(labels = date_format("%b"),
breaks = date_breaks("month")) +
ylim(-10, 35) +
labs(title = "San Francisco Weather Radial",
x = NULL, y = NULL) +
coord_polar() +
theme_minimal(base_family = "Lato Semibold") +
theme(legend.position = "bottom")
hc <- highchart() %>%
hc_chart(type = "column",
polar = TRUE) %>%
hc_plotOptions(series = list(stacking = "normal",
showInLegend = FALSE)) %>%
hc_xAxis(gridLineWidth = 0.5,
type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")) %>%
hc_yAxis(max = 30,
min = -10,
labels = list(format = "{value} C"),
showFirstLabel = FALSE) %>%
hc_add_series(data = dsmax) %>%
hc_add_series(data = dsmin,
color = "transparent",
enableMouseTracking = FALSE) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_tooltip(useHTML = TRUE,
headerFormat = as.character(tags$small("{point.x:%d %B, %Y}")),
pointFormat = tltip)
hc
library(highcharter)
library(ggplot2)
library(dplyr)
library(stringr)
library(lubridate)
hc <- highchart() %>%
hc_chart(type = "column",
polar = TRUE) %>%
hc_plotOptions(series = list(stacking = "normal",
showInLegend = FALSE)) %>%
hc_xAxis(gridLineWidth = 0.5,
type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")) %>%
hc_yAxis(max = 30,
min = -10,
labels = list(format = "{value} C"),
showFirstLabel = FALSE) %>%
hc_add_series(data = dsmax) %>%
hc_add_series(data = dsmin,
color = "transparent",
enableMouseTracking = FALSE) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_tooltip(useHTML = TRUE,
headerFormat = as.character(tags$small("{point.x:%d %B, %Y}")),
pointFormat = tltip)
hc
# Chunk 2
library(highcharter)
library(ggplot2)
library(dplyr)
library(stringr)
library(lubridate)
# Chunk 3
weather <- tbl_df(read.csv("http://bl.ocks.org/bricedev/raw/458a01917183d98dff3c/sf.csv"))
weather
# Chunk 4
names(weather) <- names(weather) %>%
str_to_lower() %>%
str_replace("\\s+", "_")
# Chunk 5
weather <- weather %>%
mutate(id = seq(nrow(weather)),
date2 = as.Date(ymd(date)),
tmstmp = datetime_to_timestamp(date2),
month = month(ymd(date)))
# Chunk 6
dsmax <- weather %>%
select(x = tmstmp,
y = max.temperaturec) %>%
list.parse3()
# Chunk 7
dsmin <- weather %>%
select(x = tmstmp,
y = min.temperaturec) %>%
list.parse3()
# Chunk 8
hc <- highchart() %>%
hc_chart(type = "line") %>%
hc_xAxis(type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")) %>%
hc_yAxis(min = 0,
labels = list(format = "{value} C")) %>%
hc_add_series(data = dsmax, name = "max") %>%
hc_add_series(data = dsmin, name = "min") %>%
hc_add_theme(hc_theme_smpl())
hc
hc <- hc %>%
hc_chart(type = "column") %>%
hc_plotOptions(series = list(stacking = "normal"))
hc
# Chunk 9
dsmax <- weather %>%
mutate(color = colorize_vector(mean.temperaturec, "A"),
y = max.temperaturec - min.temperaturec) %>%
select(x = tmstmp,
y,
name = date,
color,
mean = mean.temperaturec,
max = max.temperaturec,
min = min.temperaturec) %>%
list.parse3()
# Chunk 10
x <- c("Min", "Mean", "Max")
y <- sprintf("{point.%s}", tolower(x))
tltip <- tooltip_table(x, y)
# Chunk 11
hc <- highchart() %>%
hc_chart(type = "column",
polar = TRUE) %>%
hc_plotOptions(series = list(stacking = "normal",
showInLegend = FALSE)) %>%
hc_xAxis(gridLineWidth = 0.5,
type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")) %>%
hc_yAxis(max = 30,
min = -10,
labels = list(format = "{value} C"),
showFirstLabel = FALSE) %>%
hc_add_series(data = dsmax) %>%
hc_add_series(data = dsmin,
color = "transparent",
enableMouseTracking = FALSE) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_tooltip(useHTML = TRUE,
headerFormat = as.character(tags$small("{point.x:%d %B, %Y}")),
pointFormat = tltip)
hc
# Chunk 12
library(ggplot2)
library(viridis)
library(scales)
ggplot(weather, aes(date2, ymin = min.temperaturec,
ymax = max.temperaturec, color = mean.temperaturec)) +
geom_linerange(size = 1.3, alpha = 0.75) +
scale_color_viridis(NULL, option = "A") +
scale_x_date(labels = date_format("%b"),
breaks = date_breaks("month")) +
ylim(-10, 35) +
labs(title = "San Francisco Weather Radial",
x = NULL, y = NULL) +
coord_polar() +
theme_minimal(base_family = "Lato Semibold") +
theme(legend.position = "bottom")
<- highchart() %>%
hc_chart(type = "column",
polar = FALSE) %>%
hc_plotOptions(series = list(stacking = "normal",
showInLegend = FALSE)) %>%
hc_xAxis(gridLineWidth = 0.5,
type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")) %>%
hc_yAxis(max = 30,
min = -10,
labels = list(format = "{value} C"),
showFirstLabel = FALSE) %>%
hc_add_series(data = dsmax) %>%
hc_add_series(data = dsmin,
color = "transparent",
enableMouseTracking = FALSE) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_tooltip(useHTML = TRUE,
headerFormat = as.character(tags$small("{point.x:%d %B, %Y}")),
pointFormat = tltip)
hc
hc <- highchart() %>%
hc_chart(type = "column",
polar = FALSE) %>%
hc_plotOptions(series = list(stacking = "normal",
showInLegend = FALSE)) %>%
hc_xAxis(gridLineWidth = 0.5,
type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")) %>%
hc_yAxis(max = 30,
min = -10,
labels = list(format = "{value} C"),
showFirstLabel = FALSE) %>%
hc_add_series(data = dsmax) %>%
hc_add_series(data = dsmin,
color = "transparent",
enableMouseTracking = FALSE) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_tooltip(useHTML = TRUE,
headerFormat = as.character(tags$small("{point.x:%d %B, %Y}")),
pointFormat = tltip)
hc
hc <- highchart() %>%
hc_chart(type = "column",
polar = FALSE) %>%
hc_plotOptions(series = list(stacking = "normal",
showInLegend = FALSE)) %>%
hc_xAxis(gridLineWidth = 0.5,
type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")) %>%
hc_yAxis(max = 30,
min = -10,
labels = list(format = "{value} C"),
showFirstLabel = FALSE) %>%
#hc_add_series(data = dsmax) %>%
hc_add_series(data = dsmin,
color = "transparent",
enableMouseTracking = FALSE) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_tooltip(useHTML = TRUE,
headerFormat = as.character(tags$small("{point.x:%d %B, %Y}")),
pointFormat = tltip)
hc
hc <- highchart() %>%
hc_chart(type = "column",
polar = FALSE) %>%
hc_plotOptions(series = list(stacking = "normal",
showInLegend = FALSE)) %>%
hc_xAxis(gridLineWidth = 0.5,
type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")) %>%
hc_yAxis(max = 30,
min = -10,
labels = list(format = "{value} C"),
showFirstLabel = FALSE) %>%
hc_add_series(data = dsmax) %>%
#hc_add_series(data = dsmin,
#             color = "transparent",
#            enableMouseTracking = FALSE) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_tooltip(useHTML = TRUE,
headerFormat = as.character(tags$small("{point.x:%d %B, %Y}")),
pointFormat = tltip)
hc
dsmax
hc <- highchart() %>%
hc_chart(type = "column",
polar = FALSE) %>%
hc_plotOptions(series = list(stacking = "normal",
showInLegend = FALSE)) %>%
hc_xAxis(gridLineWidth = 0.5,
type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")) %>%
hc_yAxis(max = 30,
min = -10,
labels = list(format = "{value} C"),
showFirstLabel = FALSE) %>%
hc_add_series(data = dsmax) %>%
hc_add_series(data = dsmin,
color = "transparent",
enableMouseTracking = FALSE) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_tooltip(useHTML = TRUE,
headerFormat = as.character(tags$small("{point.x:%d %B, %Y}")),
pointFormat = tltip)
hc
hc <- highchart() %>%
hc_chart(type = "column",
polar = FALSE) %>%
hc_plotOptions(series = list(stacking = "normal",
showInLegend = FALSE)) %>%
hc_xAxis(gridLineWidth = 0.5,
type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")) %>%
hc_yAxis(max = 30,
min = -10,
labels = list(format = "{value} C"),
showFirstLabel = FALSE) %>%
hc_add_series(data = dsmax) %>%
hc_add_series(data = dsmin) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_tooltip(useHTML = TRUE,
headerFormat = as.character(tags$small("{point.x:%d %B, %Y}")),
pointFormat = tltip)
hc
hc <- highchart() %>%
hc_chart(type = "column",
polar = FALSE) %>%
hc_plotOptions(series = list(stacking = "normal",
showInLegend = FALSE)) %>%
hc_xAxis(gridLineWidth = 0.5,
type = "datetime",
tickInterval = 30 * 24 * 3600 * 1000,
labels = list(format = "{value: %b}")) %>%
hc_yAxis(max = 30,
min = -10,
labels = list(format = "{value} C"),
showFirstLabel = FALSE) %>%
hc_add_series(data = dsmax) %>%
#  hc_add_series(data = dsmin) %>%
hc_add_theme(hc_theme_smpl()) %>%
hc_tooltip(useHTML = TRUE,
headerFormat = as.character(tags$small("{point.x:%d %B, %Y}")),
pointFormat = tltip)
hc
ath <- function(x) paste0("https://raw.githubusercontent.com/phalt/pokeapi/master/data/v2/csv/", x)
rm(ath)
path <- function(x) paste0("https://raw.githubusercontent.com/phalt/pokeapi/master/data/v2/csv/", x)
dfpkmn <- read_csv(path("pokemon.csv")) %>%
select(-order, -is_default) %>%
rename(pokemon = identifier)
path <- function(x) paste0("https://raw.githubusercontent.com/phalt/pokeapi/master/data/v2/csv/", x)
dfpkmn <- read.csv(path("pokemon.csv")) %>%
select(-order, -is_default) %>%
rename(pokemon = identifier)
dfpkmn
library(dplyr)
path <- function(x) paste0("https://raw.githubusercontent.com/phalt/pokeapi/master/data/v2/csv/", x)
pokemon <- read.csv(path("pokemon.csv"))
pokemon <- tbl_df(pokemon)
pokemon
pokemon <- read.csv(path("pokemon.csv")) %>%
tbl_df() %>%
select(-(order : is_default)) %>%
rename(pokemon = identifier)
pokemon
pokemon[1:151]
pokemon[1:151, ]
print(pokemon[1:151, ], n = Inf)
print(pokemon[1:251, ], n = Inf)
print(pokemon[1:252, ], n = Inf)
library(XML)
theurl <- "https://namu.wiki/w/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0/%EB%AA%A9%EB%A1%9D"
tables <- readHTMLTable(theurl)
tables
library(XML)
theurl <- "http://en.wikipedia.org/wiki/Brazil_national_football_team"
tables <- readHTMLTable(theurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
tables
theurl <- "http://en.wikipedia.org/wiki/Brazil_national_football_team"
webpage <- getURL(theurl)
# Process escape characters
webpage <- readLines(tc <- textConnection(webpage)); close(tc)
library(RCurl)
theurl <- "http://en.wikipedia.org/wiki/Brazil_national_football_team"
webpage <- getURL(theurl)
# Process escape characters
webpage <- readLines(tc <- textConnection(webpage)); close(tc)
webpage
install.packages("rvest")
library(rvest)
theurl
theurl <- "https://namu.wiki/w/%ED%8F%AC%EC%BC%93%EB%AA%AC%EC%8A%A4%ED%84%B0/%EB%AA%A9%EB%A1%9D"
list_pokemon <- theurl %>%
html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[1]') %>%
html_table()
list_pokemon
list_pokemon[[1]]
url <- "http://en.wikipedia.org/wiki/List_of_U.S._states_and_territories_by_population"
population <- url %>%
html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[1]') %>%
html_table()
population <- population[[1]]
population
theurl <- "https://ko.wikipedia.org/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC_%EB%AA%A9%EB%A1%9D"
url <- "http://en.wikipedia.org/wiki/List_of_U.S._states_and_territories_by_population"
population <- url %>%
html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[1]') %>%
html_table()
population <- population[[1]]
population
population <- theurl %>%
html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[1]') %>%
html_table()
population <- population[[1]]
population
list_pokemon <- theurl %>%
html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[1]') %>%
html_table()
list_pokemon
list_pokemon[[2]]
list_pokemon <- theurl %>%
html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[2]') %>%
html_table()
list_pokemon
ㄱㅣㅣㅣ
url <- "https://ko.wikipedia.org/wiki/%ED%8F%AC%EC%BC%93%EB%AA%AC_%EB%AA%A9%EB%A1%9D"
html(url)
read_html(url)
first_gen <- read_html(url)
print(first_gen)
str(first_gen)
first_gen[node]
first_gen["node"]
first_gen["doc"]
first_gen[1]
inspect(first_gen[1])
?read_html
class(first_gen)
first_gen <- read_html(url)
first_Gen
first_gen
html_nodes(first_genxpath='//*[@id="mw-content-text"]/table[2]')
html_nodes(first_gen, xpath='//*[@id="mw-content-text"]/table[2]')
html_nodes(first_gen, xpath='//*[@id="mw-content-text"]/table[1]')
html_nodes(first_gen, xpath='//*[@id="mw-content-text"]/table[3]')
html_nodes(first_gen, xpath='//*[@id="mw-content-text"]/table[1]')
??tagList
library(htmltools)
?tagList
markdown("2016-03-28-visualize-pokemon.Rmd", "Visualizing/")
